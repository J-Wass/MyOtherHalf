{% extends "layout.html" %}
{% block title %} My Other Half {% endblock %}
{% block content %}
{{User.playername}}
{{Room.getRoomId()}}
{{User.abilities}}
{% endblock %}
{% block scripts %}
<script>
var game;
function preload() {
  game.load.image('player', '../static/img/player.png');
  game.load.image('platform', '../static/img/platform.png');
  game.stage.disableVisibilityChange = true;
}

function create() {
   game.physics.startSystem(Phaser.Physics.ARCADE);

   player = game.add.sprite(0, 0, 'player');
   game.physics.arcade.enable(player);
   player.body.bounce.y = 0.2;
   player.body.gravity.y = 600;
   player.body.collideWorldBounds = true;

   //create the level
   platforms = game.add.group();
   platforms.enableBody = true;

   //create the bottom platform
   var ground = platforms.create(0, 300, 'platform');
   ground.body.immovable = true;

   //create 2 ledges above the bottom platform
   var ledge = platforms.create(400, 250, 'platform');
   ledge.body.immovable = true;
   ledge = platforms.create(600, 200, 'platform');
   ledge.body.immovable = true;
}
var can_double_jump = false;
var last_jump = (new Date()).getTime();

function update() {
  cursors = game.input.keyboard.createCursorKeys();

  //collide on platforms
  game.physics.arcade.collide(player, platforms);

  //if moving too slow, player stops moving
  if(Math.abs(player.body.velocity.x) < 80 && player.body.touching.down){
    player.body.velocity.x = 0
    player.body.acceleration.x = 0
  }

  //emulate some kinda friction (sorry for basing it off of velocity)
  player.body.acceleration.x = -2.5 * player.body.velocity.x;
  if (cursors.left.isDown){ //LEFT
      requestLeft();
  }
  else if (cursors.right.isDown){ //RIGHT
      requestRight();
  }
  if (cursors.up.isDown){ //JUMP
    //normal jump
    if(player.body.touching.down){
      requestJump();
    }
    //double jump
    if(!player.body.touching.down && can_double_jump && ((new Date()).getTime() - last_jump > 500)){
      requestDoubleJump();
    }
  }
  else if (cursors.down.isDown){ //DROP
      requestDrop();
  }
}

//MOVEMENT REQUESTS
function requestLeft(){
  socket.emit('tryleft', {player_id: {{User.player_id}}, room_id: {{Room.room_id}} });
}
function requestRight(){
  socket.emit('tryright', {player_id: {{User.player_id}}, room_id: {{Room.room_id}} });
}
function requestJump(){
  socket.emit('tryjump', {player_id: {{User.player_id}}, room_id: {{Room.room_id}} });
}
function requestDrop(){
  socket.emit('trydrop', {player_id: {{User.player_id}}, room_id: {{Room.room_id}} });
}
function requestDoubleJump(){
  socket.emit('trydoublejump', {player_id: {{User.player_id}}, room_id: {{Room.room_id}} });
}
//END MOVEMENT REQUESTS

//MOVEMENT FUNCTIONS
function moveLeft(){
  if(!player.body.touching.down){
    player.body.velocity.x = Math.min(-100,player.body.velocity.x)
  }
  else{
    player.body.velocity.x = -150;
  }
}
function moveRight(){
  if(!player.body.touching.down){
    player.body.velocity.x = Math.max(100,player.body.velocity.x)
  }
  else{
    player.body.velocity.x = 150;
  }
}
function moveDrop(){
  player.body.velocity.y += 25; //can't change accel bc it will mess with gravity, lol
}
function moveJump(){
  player.body.velocity.y = -350;
  can_double_jump = true;
  last_jump = (new Date()).getTime()
}
function moveDoubleJump(){
  player.body.velocity.y = -300;
  player.body.velocity.x *= 1.5;
  can_double_jump = false;
}
//END MOVEMENT FUNCTONS

//NETWORK TRAFFIC
var socket = io("http://127.0.0.1:5000");

socket.on('player joined', function(ids) {
  console.log(ids);
});

socket.on('move right', function() {
  moveRight();
});
socket.on('move left', function() {
  moveLeft();
});
socket.on('move jump', function() {
  moveJump();
});
socket.on('move double jump', function() {
  moveDoubleJump();
});
socket.on('move drop', function() {
  moveDrop();
});
//END NETWORK TRAFFIC

//onload, send joinroom message to server
$(function(){
  game = new Phaser.Game($(window).width() - 400, $(window).height()-100, Phaser.Auto, '', { preload: preload, create: create, update: update }, true);
  socket.emit('joinroom', {player_id: {{User.player_id}}, room_id: {{Room.room_id}} });
})
</script>
{% endblock %}
